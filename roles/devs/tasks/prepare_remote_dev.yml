---
- name: Configurar ambiente Odoo local
  tags: remote_dev
  become: false     # Ejecuta las tareas como el usuario actual, no root
  block:
    - name: Crear carpeta ~/odoo si no existe
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/odoo" # Utiliza la variable de entorno HOME del usuario
        state: directory
        mode: '0755'

    - name: Clonar repositorio docker-compose-context
      ansible.builtin.git:
        repo: git@github.com:ingadhoc/docker-compose-context.git
        dest: "{{ ansible_env.HOME }}/odoo/ctx"
        version: main
        accept_hostkey: yes # Importante si la clave del host no está en known_hosts

    - name: Ejecutar init.sh para el contexto
      ansible.builtin.shell:
        cmd: ./init.sh
        chdir: "{{ ansible_env.HOME }}/odoo/ctx" # Cambia al directorio antes de ejecutar
      args:
        # Esto asegura que el script se ejecute desde el directorio correcto.
        # Es una alternativa a 'cwd' para el módulo shell.
        chdir: "{{ ansible_env.HOME }}/odoo/ctx"
      # Para idempotencia, si init.sh crea un archivo/directorio específico al finalizar,
      # puedes añadir 'creates: "{{ ansible_env.HOME }}/odoo/ctx/algun_archivo_creado.txt"'
      # para evitar que se ejecute si ya se completó.

    - name: Clonar repositorio docker-compose-odoo para la versión (directorio '18')
      ansible.builtin.git:
        repo: git@github.com:ingadhoc/docker-compose-odoo.git
        dest: "{{ ansible_env.HOME }}/odoo/18" # El destino es '18'
        version: main # La rama es 'main'
        accept_hostkey: yes

    - name: Ejecutar init.sh para Odoo (directorio '18')
      ansible.builtin.shell:
        cmd: ./init.sh
        chdir: "{{ ansible_env.HOME }}/odoo/18"
      args:
        chdir: "{{ ansible_env.HOME }}/odoo/18"
      # Igualmente, considera añadir 'creates: ...' para idempotencia.
