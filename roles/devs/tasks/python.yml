---
- name: Python3 - Instalar dependencias, librerías pip y paquetes
  tags: python
  block:
    - name: Python3 - Instalar dependencias en Debian
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - ipython3
          - python3-setuptools
          - python3-pip-whl
          - python3-pip
          - pylint
          - python3
          - python3-venv
        state: present
      when: ansible_distribution == "Debian"

    - name: Python3 - Instalar dependencias en Ubuntu
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - ipython3
          - python3-setuptools
          - python3-pip-whl
          - python3-pip
          - pylint
          - python3
          - python3.10-venv
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Crear un entorno virtual de Python
      ansible.builtin.command: python3 -m venv /home/{{ remote_regular_user }}/lint-hook
      changed_when: false

    - name: Asegurarse de que pip esté actualizado en el entorno virtual
      ansible.builtin.command: /home/{{ remote_regular_user }}/lint-hook/bin/pip install --upgrade pip
      changed_when: false

    - name: Python - Instalar pylint-odoo, flake8, pep8, pre-commit en el entorno virtual
      become: true
      ansible.builtin.pip:
        executable: /home/{{ remote_regular_user }}/lint-hook/bin/pip
        name: "{{ items }}"
        extra_args: --upgrade --pre
      vars:
        items:
          - pylint-odoo
          - flake8
          - pep8
          - pre-commit

- name: Lint hooks - Configuración
  tags: lint_hooks
  block:
    # Instalar lint hooks
    - name: Lint hooks - Limpiar carpeta
      ansible.builtin.file:
        path: /home/{{ remote_regular_user }}/lint-hook
        state: absent
        force: true

    - name: Lint hooks - Clonar repositorio
      become_user: "{{ remote_regular_user }}"
      ansible.builtin.git:
        repo: https://github.com/OCA/maintainer-quality-tools
        dest: /home/{{ remote_regular_user }}/lint-hook
        version: master

#    - name: Lint hooks - Instalar requirements
#      ansible.builtin.pip:
#        chdir: /home/{{ remote_regular_user }}/lint-hook
#        requirements: requirements.txt

    # Fix pendiente: Usar módulo name y no command
    # - name: Crear link simbólico
    #   ansible.builtin.file:
    #     src: /home/{{ remote_regular_user }}/lint-hook/*
    #     dest: /usr/share/git-core/templates/hooks/
    #     state: link
    #     force: true

    - name: Crear enlaces simbólicos para todos los archivos en el directorio de origen
      ansible.builtin.find:
        paths: "/home/{{ remote_regular_user }}/lint-hook/git"
        file_type: file
      register: hook_files

    - name: Crear enlaces simbólicos en el destino
      ansible.builtin.file:
        src: "{{ item.path }}"
        dest: "/usr/share/git-core/templates/hooks/{{ item.path | basename }}"
        state: link
        force: true
      loop: "{{ hook_files.files }}"

    - name: Debug - Clonar el repositorio odoo_log_analyser
      become_user: "{{ remote_regular_user }}"
      ansible.builtin.git:
        repo: https://github.com/adhoc-dev/odoo_log_analyser.git
        dest: /home/{{ remote_regular_user }}/repositorios/odoo_log_analyser
