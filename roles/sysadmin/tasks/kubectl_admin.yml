---
- name: SysAdmin - Plugins para kubectl
  tags: kubectl_plugins
  block:
    - name: Install FairwindsOps/pluto
      block:
        - name: Get Last Version URL
          ansible.builtin.uri:
            url: https://api.github.com/repos/FairwindsOps/pluto/releases/latest
            return_content: true
          register: json_reponse

        - name: Download and Install
          loop: "{{ json_reponse.json.assets }}"
          when: item.name | endswith("linux_amd64.tar.gz")
          become: true
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ item.browser_download_url }}"
            dest: "/usr/bin/"
            keep_newer: true
            extra_opts:
              - --strip=1
              - --no-anchored
              - pluto
            mode: "0755"

        - name: Add bash completion
          ansible.builtin.blockinfile:
            path: /home/{{ remote_regular_user }}/.bashrc
            block: |
              if command -v pluto >/dev/null 2>&1; then
                source <(pluto completion bash --no-footer)
              fi

    - name: Install rancher/rke
      block:
        - name: Get Last Version URL
          ansible.builtin.uri:
            url: https://api.github.com/repos/rancher/rke/releases/latest
            return_content: true
          register: json_reponse

        - name: Download and Install
          loop: "{{ json_reponse.json.assets }}"
          when: item.name | endswith("rke_linux-amd64")
          become: true
          ansible.builtin.get_url:
            url: "{{ item.browser_download_url }}"
            dest: /usr/bin/rke
            mode: '0755'

    - name: Install robscott/kube-capacity
      block:
        - name: Get Last Version URL
          ansible.builtin.uri:
            url: https://api.github.com/repos/robscott/kube-capacity/releases/latest
            return_content: true
          register: json_reponse

        - name: Download and Install
          loop: "{{ json_reponse.json.assets }}"
          when: item.name | endswith("linux_x86_64.tar.gz")
          become: true
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ item.browser_download_url }}"
            dest: "/usr/bin/"
            keep_newer: true
            extra_opts:
              - --strip=1
              - --no-anchored
              - kube-capacity
            mode: "0755"

        - name: Add bash completion
          ansible.builtin.blockinfile:
            path: /home/{{ remote_regular_user }}/.bashrc
            block: |
              if command -v kube-capacity >/dev/null 2>&1; then
                source <(kube-capacity completion bash)
              fi

    - name: Install derailed/popeye
      block:
        - name: Get Last Version URL
          ansible.builtin.uri:
            url: https://api.github.com/repos/derailed/popeye/releases/latest
            return_content: true
          register: json_reponse

        - name: Download and Install
          loop: "{{ json_reponse.json.assets }}"
          when: item.name | endswith("linux_amd64.tar.gz")
          become: true
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ item.browser_download_url }}"
            dest: "/usr/bin/"
            keep_newer: true
            extra_opts:
              - --strip=1
              - --no-anchored
              - popeye
            mode: "0755"

        - name: Add bash completion
          ansible.builtin.blockinfile:
            path: /home/{{ remote_regular_user }}/.bashrc
            block: |
              if command -v popeye >/dev/null 2>&1; then
                source <(popeye completion bash)
              fi

    - name: Instalar kubectx
      when: ansible_facts['distribution'] == 'Debian'
      become: true
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - kubens
          - kubectx
